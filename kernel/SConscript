import pathlib
import sh

env = Environment(tools=[])

def repo_scan(dir):
    p = pathlib.Path(str(dir.abspath))
    yield from (str(p / f) for f in sh.git('-C', str(p), 'ls-files', '-mo', '--exclude-standard').split('\n')[:-1])
    yield sh.git('-C', str(p), 'rev-parse', '--absolute-git-dir').split('\n')[0]+'/logs/HEAD'

repo = Dir('linux/')
repo_files = list(repo_scan(repo))
env['REPO_PATH'] = repo.abspath

kbld = Builder(action = [

    'git -C $REPO_PATH clean -dfxq',
    'cp $SOURCE $REPO_PATH/.config',

])
env['BUILDERS']['Kernel'] = kbld

"""
rm -rf root/
rm -rf boot/
mkdir -p boot/overlays/
cp $*.config linux/.config
$(MAKE) -C linux ARCH=arm $(CROSS_OPTS) zImage modules dtbs $(REDIRECT)
$(MAKE) -C linux ARCH=arm $(CROSS_OPTS) INSTALL_MOD_PATH=../root modules_install $(REDIRECT)
cp linux/arch/arm/boot/zImage boot/$*.img
cp linux/arch/arm/boot/dts/*.dtb boot/
cp linux/arch/arm/boot/dts/overlays/*.dtb* boot/overlays/
cp linux/arch/arm/boot/dts/overlays/README boot/overlays/
tar -C root/ -czf $*-root.tar.gz .
tar -C boot/ -czf $*-boot.tar.gz .
"""


env.Kernel([Dir('kernel-root/'), Dir('kernel-boot/')], ['kernel.config', *repo_files])
env.Kernel([Dir('kernel7-root/'), Dir('kernel7-boot/')], ['kernel7.config', *repo_files])
