import os

Import('env')
renv = env.Clone()

try:
    renv['ENV']['http_proxy'] = os.environ['APT_HTTP_PROXY']
except KeyError:
    print("Don't forget to set up apt-cacher-ng")

packages = SConscript('../packages/SConscript', 'env')

all_root_debs = sorted(set.union(*(set(v['root_debs']) for v in packages.values())))

multistrap_conf = Value(renv['FUNCTIONS'].multistrap_packages(' '.join(all_root_debs)))
multistrap_conf_file = renv.Substfile('multistrap.conf', ['multistrap.conf.in', multistrap_conf, Value('')])

overlay = Dir('overlay/')
stage = Dir('stage/')

renv['ENV']['QEMU_LD_PREFIX'] = stage.abspath
renv['CHROOT'] = 'proot -0 -q qemu-arm -w / -r'

sysroot = renv.Command('initrd', [multistrap_conf_file, overlay], [

    'rm -rf --one-file-system ${STAGE}',

    # run multistrap
    'mkdir -p ${STAGE}/etc/apt/trusted.gpg.d/',
    'gpg --export 82B129927FA3303E > ${STAGE}/etc/apt/trusted.gpg.d/raspberrypi-archive-keyring.gpg',
    'gpg --export 9165938D90FDDD2E > ${STAGE}/etc/apt/trusted.gpg.d/raspbian-archive-keyring.gpg',
    '/usr/sbin/multistrap -d ${STAGE} -f ${SOURCES[0]}',

    # overlay
    'cp -r ${SOURCES[1]}/* ${STAGE}',

    # pack rootfs into initrd
    '${CHROOT} ${STAGE} sh -c "cd / && find * -xdev -not \( \
              -path host-rootfs -prune \
              -path run -prune \
              -path proc -prune \
              -path sys -prune \
              -path boot -prune \
           \) | cpio --create -H newc" | xz -C crc32 -9 > ${TARGET}'

], STAGE=stage, PACKAGES=packages)


