import os
import posixpath
import pathlib

env = Environment(tools=[])
env.Tool('textfile')

try:
    env['ENV']['http_proxy'] = os.environ['APT_HTTP_PROXY']
except KeyError:
    print("Don't forget to set up apt-cacher-ng")

packages = []

for p in Glob('../packages/*/SConscript'):
    packages.append(SConscript(p))


def conf_for_package(p):
    return """
    # packages for {:s}
    packages={:s}
    """.format(p['name'], ' '.join(p['sysroot_debs']))


def relative_links(target, source, env):

    root = pathlib.Path(str(target[0].abspath))

    for path in pathlib.Path(root).rglob('*'):
        if path.is_symlink():
            link_target = os.readlink(str(path))
            if link_target[0] != '/':
                continue
            if link_target.startswith(str(root)):
                continue
            path.unlink()
            new_target = posixpath.relpath(root / link_target[1:], start=path.parent)
            print(path, ':', link_target, '->', new_target)
            os.symlink(new_target, str(path))


# sysroot setup

multistrap_conf = Value('{:s}'.format(' '.join(conf_for_package(p) for p in packages if p['enabled'])))
multistrap_conf_file = env.Substfile('multistrap.conf', ['multistrap.in', multistrap_conf])
sysroot_dir = Dir('sysroot/')

sysroot = env.Command(sysroot_dir, multistrap_conf_file, [
    'mkdir -p $TARGET/etc/apt/trusted.gpg.d/',
    'gpg --export 82B129927FA3303E > $TARGET/etc/apt/trusted.gpg.d/raspberrypi-archive-keyring.gpg',
    'gpg --export 9165938D90FDDD2E > $TARGET/etc/apt/trusted.gpg.d/raspbian-archive-keyring.gpg',
    '/usr/sbin/multistrap -d $TARGET -f $SOURCE',
])
env.AddPostAction(sysroot, relative_links)


# toolchain setup

toolchain_dir = Dir('toolchain/')
toolchain_tarball = File('gcc-linaro-6.3.1-2017.05-x86_64_arm-linux-gnueabihf.tar.xz')
toolchain_url = Value('https://releases.linaro.org/components/toolchain/binaries/6.3-2017.05/arm-linux-gnueabihf/gcc-linaro-6.3.1-2017.05-x86_64_arm-linux-gnueabihf.tar.xz')

env.Command(toolchain_tarball, toolchain_url, 'wget -N -O $TARGET $SOURCE')
env.Command(toolchain_dir, toolchain_tarball, [
    'mkdir -p $TARGET',
    'tar -C $TARGET --strip-components=1 -xf $SOURCE',
])
